# Release Actions
# ==========================
# Reusable workflow that performs actions and workflows release.
# - Generates README for changed actions and workflows (documentation, versioning, etc.)
# - Commits and pushes the changes to the main branch

name: Release Actions

on:
  workflow_call:
    inputs:
      update-all:
        description: "Update all actions and workflows, regardless of changes."
        required: false
        default: false
        type: boolean
    secrets:
      private-access-token:
        description: "Private Access Token for commiting changes and bypassing branch protection if any."
        required: true

jobs:
  prepare-release:
    runs-on: "ubuntu-latest"
    outputs:
      changed-actions: ${{ steps.get-changed-actions.outputs.result }}
      changed-workflows: ${{ steps.get-changed-workflows.outputs.result }}
      latest-tag: ${{ steps.get-latest-tag.outputs.tag }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - id: get-latest-tag
        uses: actions-ecosystem/action-get-latest-tag@v1

      - id: changed-files
        if: ${{ inputs.update-all == false }}
        uses: tj-actions/changed-files@v35.7.2
        with:
          files: |
            ./actions/*
            ./.github/workflows/*
          dir_names_exclude_root: true

      - id: changed-variables
        shell: bash
        run: |
          CHANGED_FILES="${{ steps.changed-files.outputs.all_changed_and_modified_files }}"
          echo "changed-files=$CHANGED_FILES" >> "$GITHUB_OUTPUT"

          CURRENT_WORKFLOW=$(echo "${{ github.workflow_ref }}" | sed "s|${{ github.repository }}/||g" | sed 's/@.*//g')
          CURRENT_WORKFLOW_HAS_CHANGED=$([[ "$CHANGED_FILES" == *"$CURRENT_WORKFLOW"* ]] && echo "true" || echo "false")
          UPDATE_ALL="${{ inputs.update-all }}"

          FORCE_UPDATE=$([[ "$CURRENT_WORKFLOW_HAS_CHANGED" = "true" || "$UPDATE_ALL" = "true" ]] && echo "true" || echo "false")
          echo "force-update=$FORCE_UPDATE" >> "$GITHUB_OUTPUT"

      - id: get-changed-actions
        shell: bash
        run: |
          CHANGED_FILES="${{ steps.changed-variables.outputs.changed-files }}"
          FORCE_UPDATE="${{ steps.changed-variables.outputs.force-update }}"

          CHANGED_ACTIONS=()
          for FILE in $(find actions -name "action.yml" -type f); do
            ACTION_HAS_CHANGED=$([[ "$CHANGED_FILES" == *"$FILE"* ]] && echo "true" || echo "false")
            SHOULD_UPDATE_FILE=$([[ "$FORCE_UPDATE" = "true" || "$ACTION_HAS_CHANGED" = "true" ]] && echo "true" || echo "false")
            echo "::debug::File $FILE has changed: $ACTION_HAS_CHANGED, should update file: $SHOULD_UPDATE_FILE"

            if [ "$SHOULD_UPDATE_FILE" == "true" ]; then
              CHANGED_ACTIONS+=("$(dirname "$FILE")")
            fi
          done

          echo "::debug::Changed files: ${CHANGED_ACTIONS[*]}"
          JSON_CHANGED_ACTIONS=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${CHANGED_ACTIONS[@]}");
          echo "result<<EOF" >> "$GITHUB_OUTPUT" && echo "$JSON_CHANGED_ACTIONS" >> "$GITHUB_OUTPUT" && echo "EOF" >> "$GITHUB_OUTPUT"

      - id: get-changed-workflows
        shell: bash
        run: |
          CHANGED_FILES="${{ steps.changed-variables.outputs.changed-files }}"
          FORCE_UPDATE="${{ steps.changed-variables.outputs.force-update }}"

          CHANGED_WORKFLOWS=()
          for FILE in .github/workflows/*.yml; do
            # Ignore internal workflows
            if [[ $(basename "$FILE") == __* ]]; then
              continue
            fi

            WORKFLOW_HAS_CHANGED=$([[ "$CHANGED_FILES" == *"$FILE"* ]] && echo "true" || echo "false")
            SHOULD_UPDATE_FILE=$([[ "$FORCE_UPDATE" = "true" || "$WORKFLOW_HAS_CHANGED" = "true" ]] && echo "true" || echo "false")
            echo "::debug::File $FILE has changed: $WORKFLOW_HAS_CHANGED, should update file: $SHOULD_UPDATE_FILE"

            if [ "$SHOULD_UPDATE_FILE" == "true" ]; then
              CHANGED_WORKFLOWS+=("$FILE")
            fi
          done

          echo "::debug::Changed files: ${CHANGED_WORKFLOWS[*]}"
          JSON_CHANGED_WORKFLOWS=$(jq --compact-output --null-input '$ARGS.positional' --args -- "${CHANGED_WORKFLOWS[@]}");
          echo "result<<EOF" >> "$GITHUB_OUTPUT" && echo "$JSON_CHANGED_WORKFLOWS" >> "$GITHUB_OUTPUT" && echo "EOF" >> "$GITHUB_OUTPUT"

  generate-actions-readme:
    needs: prepare-release
    runs-on: ubuntu-latest
    if: ${{ needs.prepare-release.outputs.changed-actions != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        action: ${{ fromJson(needs.prepare-release.outputs.changed-actions) }}
    steps:
      - uses: actions/checkout@v3

      - name: ðŸ“– Generate README
        uses: bitflight-devops/github-action-readme-generator@v1.3.14
        with:
          action: ${{ matrix.action }}/action.yml
          readme: ${{ matrix.action }}/README.md
          repo: ${{ github.event.repository.name }}/${{ matrix.action }}
          pretty: true
          versioning_enabled: true
          version_prefix: ""
          version_override: ${{ needs.prepare-release.outputs.latest-tag }}
        env:
          INPUT_SHOW_LOGO: "true"

      - uses: actions/upload-artifact@v3
        with:
          name: changed-files
          path: ${{ github.workspace }}/**/${{ matrix.action }}/README.md

  generate-workflows-readme:
    needs: prepare-release
    runs-on: ubuntu-latest
    if: ${{ needs.prepare-release.outputs.changed-workflows != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        workflow: ${{ fromJson(needs.prepare-release.outputs.changed-workflows) }}
    steps:
      - uses: actions/checkout@v3

      - name: ðŸ“– Generate README
        id: generate-readme
        run:
          # Readme file is same name but without yml by .md extension
          WORKFLOW_FILE="${{ matrix.workflow }}"
          README_FILE="${WORKFLOW_FILE%.*}.md"

          echo "readme-file=${README_FILE}" >> "$GITHUB_OUTPUT"

          WORKFLOW_FULL_PATH="${{ github.repository }}/${WORKFLOW_FILE}"

          sed -i "s|${WORKFLOW_FULL_PATH}@.*|${WORKFLOW_FULL_PATH}@${{ needs.prepare-release.outputs.latest-tag }}|g" "${README_FILE}"

      - uses: actions/upload-artifact@v3
        with:
          name: changed-files
          path: ${{ github.workspace }}/**/${{ steps.generate-readme.outputs.readme-file }}

  publish-actions-readme:
    needs: [generate-actions-readme, generate-workflows-readme]
    if: always() && contains(needs.*.result, 'success') && !contains(needs.*.result, 'failure')
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3.1.0
        with:
          token: ${{ secrets.private-access-token }}

      - uses: actions/download-artifact@v3
        with:
          name: changed-files

      - uses: hoverkraft-tech/ci-github-common/create-and-merge-pull-request@main
        with:
          github-token: ${{ secrets.github-token }}
          branch: docs/actions-readme
          title: "docs: update actions README"
          body:
          commit-message: |
            docs: update actions README

            [skip ci]

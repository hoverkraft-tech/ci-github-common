# Linter
# ==========================
# Reusable workflow that performs linting on the code base.
# Mainly using [Super-Linter](https://github.com/super-linter/super-linter), with some opinionated defaults.

name: Linter

on:
  workflow_call:
    inputs:
      runs-on:
        description: "Json array of runner(s) to use. See <https://docs.github.com/en/actions/using-jobs/choosing-the-runner-for-a-job>."
        type: string
        default: '["ubuntu-latest"]'
        required: false
      linter-env:
        description: |
          Environment variables in multilines format "key=value" to pass to the linter.
          See <https://github.com/super-linter/super-linter>.
        type: string
        required: false

    secrets:
      github-token:
        description: "Token for marking the status of linter run in the Checks section. See <https://github.com/super-linter/super-linter#how-to-use>."

permissions:
  contents: read
  statuses: write

jobs:
  checks:
    name: ðŸ§¹ Lint Code Base
    runs-on: ${{ fromJson(inputs.runs-on) }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - if: ${{ inputs.linter-env }}
        run: |
          LINTER_ENV=$(cat <<EOF
          ${{ inputs.linter-env }}
          EOF
          )

          echo "$LINTER_ENV" | while IFS= read -r line; do
            if [ -z "$line" ]; then continue; fi
            echo "$line" >> "$GITHUB_ENV"
          done

      - name: ðŸ‘• Lint Code Base
        uses: super-linter/super-linter/slim@4e8a7c2bf106c4c766c816b35ec612638dc9b6b2 # v7.3.0
        env:
          VALIDATE_ALL_CODEBASE: false
          LOG_LEVEL: WARN
          DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITHUB_TOKEN: ${{ secrets.github-token || github.token }}
          KUBERNETES_KUBECONFORM_OPTIONS: "--schema-location default --schema-location 'https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/{{.Group}}/{{.ResourceKind}}_{{.ResourceAPIVersion}}.json'"

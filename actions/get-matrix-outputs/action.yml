# Download matrix ouputs from artifacts, because github action does not handle job outputs for matrix
# Workaround for https://github.com/orgs/community/discussions/26639

name: "Get matrix ouput"
description: "Download matrix ouputs from artifacts, because GitHub action does not handle job outputs for matrix"
author: Hoverkraft
branding:
  icon: download-cloud
  color: gray-dark

inputs:
  artifact-name:
    description: "The name of the artifact to download."
    required: true
  remove-artifact:
    description: "Define weather to remove the downloaded artifact after reading."
    required: false
    default: "true"
outputs:
  result:
    description: "The matrix combined JSON outputs."
    value: ${{ steps.read-artifacts.outputs.result }}

runs:
  using: "composite"
  steps:
    - id: prepare-download
      shell: bash
      run: |
        # Forge the unique artifact name for the current workflow
        ARTIFACT_NAME="${{ github.run_id }}-${{ github.run_number }}-${{ inputs.artifact-name }}"
        echo "artifact-name=$ARTIFACT_NAME" >> "$GITHUB_OUTPUT"

        ARTIFACT_PATH="/tmp/$ARTIFACT_NAME"
        echo "artifact-path=$ARTIFACT_PATH" >> "$GITHUB_OUTPUT"

    - uses: actions/download-artifact@v3
      with:
        name: ${{ steps.prepare-download.outputs.artifact-name }}
        path: ${{ steps.prepare-download.outputs.artifact-path }}

    - id: read-artifacts
      shell: bash
      run: |
        RESULT=$(jq -sc "." ${{ steps.prepare-download.outputs.artifact-path }}/*.json)
        echo "result<<EOF" >> "$GITHUB_OUTPUT" && echo "$RESULT" >> "$GITHUB_OUTPUT" && echo "EOF" >> "$GITHUB_OUTPUT"

    - uses: actions/github-script@v4
      if: ${{ inputs.remove-artifact == 'true' }}
      with:
        github-token: ${{ github.token }}
        script: |
          // Delete artifact folder
          await io.rmRF(`${{ steps.prepare-download.outputs.artifact-path }}`);

          // Remove the artifact from the workflow run
          const artifacts = await github.paginate(
              github.rest.actions.listWorkflowRunArtifacts.endpoint.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: context.runId,
              })
          );

          const artifactToDelete = artifacts.filter(
            ({ name }) => name === "${{ steps.prepare-download.outputs.artifact-name }}"
          );

          await Promise.all(
            artifacts.map(
              async ({ id }) => {
                try{
                  await github.rest.actions.deleteArtifact({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    artifact_id: id,
                  });
                } catch(error){
                  if (error.status === 404) {
                    core.warning(`Artifact ${id} not found`);
                  } else {
                    throw error;
                  }
                }
              }
            )
          );

# Download matrix ouputs from artifacts, because github action does not handle job outputs for matrix
# Workaround for https://github.com/orgs/community/discussions/26639

name: "Get matrix ouput"
description: "Download matrix ouputs from artifacts, because GitHub action does not handle job outputs for matrix"
author: Hoverkraft
branding:
  icon: download-cloud
  color: gray-dark

inputs:
  artifact-name:
    description: "The name of the artifact to download."
    required: true
  remove-artifact:
    description: "Define weather to remove the downloaded artifact after reading."
    required: false
    default: "true"
outputs:
  result:
    description: "The matrix combined JSON outputs."
    value: ${{ steps.read-artifacts.outputs.artifacts }}

runs:
  using: "composite"
  steps:
    - id: prepare-download
      shell: bash
      run: |
        # Forge the unique artifact name for the current workflow
        ARTIFACT_NAME="${{ github.run_id }}-${{ github.run_number }}-${{ inputs.artifact-name }}"
        echo "artifact-name=$ARTIFACT_NAME" >> "$GITHUB_OUTPUT"

        ARTIFACT_PATH="/tmp/$ARTIFACT_NAME"
        echo "artifact-path=$ARTIFACT_PATH" >> "$GITHUB_OUTPUT"

    - uses: actions/download-artifact@v3
      with:
        name: ${{ steps.prepare-download.outputs.artifact-name }}
        path: ${{ steps.prepare-download.outputs.artifact-path }}

    - id: read-artifacts
      uses: actions/github-script@v7
      with:
        script: |
          const { readFileSync } = require('fs');

          const artifactPath = `${{ steps.prepare-download.outputs.artifact-path }}`;
          const globber = await glob.create(`${artifactPath}/*.json`, {followSymbolicLinks: false});
          const artifactFiles = await globber.glob();

          core.debug(`Found ${artifactFiles.length} files in ${artifactPath}`);

          const result = artifactFiles
            .map(file => readFileSync(file, 'utf8').trim())
            .filter(content => content)
            .join(",");

          core.setOutput('artifacts',`[${result}]`);

          const shouldRemoveArtifact = `${{ inputs.remove-artifact }}` === 'true';
          if(shouldRemoveArtifact) {
            await io.rmRF(artifactPath);
          }

    - if: ${{ inputs.remove-artifact == 'true' }}
      uses: geekyeggo/delete-artifact@v2
      with:
        name: ${{ steps.prepare-download.outputs.artifact-name }}
